@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');

/* Variables --------------------------------------------------- */

:root {
  --color-blue: #0D50FF;
  --color-dark: #282828;
  --color-light: #FFFFFF;
  --color-dark-gray: #8B8B8B;
  --color-light-gray: #DDDDDD;
  --color-light-gray2: #F1F3F4;


  --border-radius-small: 6px;
  --border-radius-large: 12px;
  --border: 1px solid var(--color-dark-gray);

  --input-height: 54px;

  --container-width: 1360px;
  --container-padding-x: 15px;

  --blocks-margin-y: 80px;

  --transition-duration: all 0.2s;
}

/* General Layout Styles --------------------------------------- */

body,
html {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: Montserrat, sans-serif;
  font-size: 20px;
  line-height: 26px;
  color: var(--color-dark);
  font-weight: 500;
}

h2 {
  font-size: 64px;
  font-weight: 700;
  line-height: 70.4px;
  margin: 0 0 40px 0;
}

.globalContainer {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

/* a:focus,
button:focus,
input:focus,
select:focus,
textarea:focus {
  outline: 2px solid var(--color-blue);
  outline-offset: 2px;
} */

/* Блок заголовка и кнопки -----------------*/

.titleBlock h2 {
  font-size: 64px;
  font-weight: 700;
  line-height: 70.4px;
  margin: 0 0 10px 0;
}

.titleBlock {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.titleBlockLine {
  width: 100%;
  height: 1px;
  background-color: var(--color-light-gray);
  margin-left: 32px;
}

.titleBlockButton {
  font-size: 16px;
  font-weight: 500;
  color: var(--color-dark-gray);
  background-color: var(--color-light);
  border: 1px solid var(--color-light-gray);
  border-radius: var(--border-radius-small);
  white-space: nowrap;
  padding: 6px 16px;
}





a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

/* svg * {
  transition-duration: fill, stroke;
  transition-duration: var(--transition-duration);
} */

ul,
ol {
  margin: 0;
  padding: 0;
  list-style: none;
}

button,
select,
a {
  text-decoration: none;
  cursor: pointer;
}

a {
  color: var(--color-dark);
}

a:hover {
  color: var(--color-blue);
}

/* Normalise -------------------------------------------------- */
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
    Убираем внутренние отступы слева тегам списков,
    у которых есть атрибут class
   */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
    Убираем внешние отступы body и двум другим тегам,
    у которых есть атрибут class
   */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
    Убираем внешние отступы вертикали нужным тегам,
    у которых есть атрибут class
   */
:where(h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  ul,
  ol,
  dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
    Убираем стандартный маркер маркированному списку,
    у которого есть атрибут class
   */
:where(ul[class]) {
  list-style: none;
}

/**
    Обнуляем вертикальные внешние отступы параграфа,
    объявляем локальную переменную для внешнего отступа вниз,
    чтобы избежать взаимодействие с более сложным селектором
   */
p {
  /* --paragraphMarginBottom: 24px; */

  margin-block: 0;
}

/**
    Внешний отступ вниз для параграфа без атрибута class,
    который расположен не последним среди своих соседних элементов
   */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}


/**
    Упрощаем работу с изображениями
   */
img {
  display: block;
  max-width: 100%;
}

/**
    Наследуем свойства шрифт для полей ввода
   */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
  height: 100%;
}

/**
    Плавный скролл
   */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
  min-height: 100%;
  /**
      Унифицированный интерлиньяж
     */
  line-height: 1.5;
}

/**
    Приводим к единому цвету svg-элементы
   */
svg *[fill] {
  fill: currentColor
}

svg *[stroke] {
  stroke: currentColor
}

/**
    Чиним баг задержки смены цвета при взаимодействии с svg-элементами
   */
svg * {
  transition-property: fill, stroke;
}